// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type Education struct {
	EducationID  int64       `json:"education_id"`
	UserID       string      `json:"user_id"`
	School       string      `json:"school"`
	Degree       string      `json:"degree"`
	FieldOfStudy string      `json:"field_of_study"`
	StartDate    pgtype.Date `json:"start_date"`
	EndDate      pgtype.Date `json:"end_date"`
	Current      bool        `json:"current"`
	Grade        string      `json:"grade"`
	Achievements string      `json:"achievements"`
	Skills       []string    `json:"skills"`
}

type Experience struct {
	ExperienceID     int64       `json:"experience_id"`
	UserID           string      `json:"user_id"`
	Title            string      `json:"title"`
	PracticeArea     string      `json:"practice_area"`
	FirmID           int64       `json:"firm_id"`
	PracticeLocation string      `json:"practice_location"`
	StartDate        pgtype.Date `json:"start_date"`
	EndDate          pgtype.Date `json:"end_date"`
	Current          bool        `json:"current"`
	Description      string      `json:"description"`
	Skills           []string    `json:"skills"`
}

type Firm struct {
	FirmID   int64  `json:"firm_id"`
	Name     string `json:"name"`
	LogoUrl  string `json:"logo_url"`
	OrgType  string `json:"org_type"`
	Website  string `json:"website"`
	Location string `json:"location"`
	About    string `json:"about"`
}

type License struct {
	LicenseID     int64       `json:"license_id"`
	UserID        string      `json:"user_id"`
	Name          string      `json:"name"`
	LicenseNumber string      `json:"license_number"`
	IssueDate     pgtype.Date `json:"issue_date"`
	IssueState    string      `json:"issue_state"`
	LicensePdf    *string     `json:"license_pdf"`
}

type Pricing struct {
	PriceID          int64          `json:"price_id"`
	UserID           string         `json:"user_id"`
	ServiceType      string         `json:"service_type"`
	PerHourPrice     pgtype.Numeric `json:"per_hour_price"`
	PerHearingPrice  pgtype.Numeric `json:"per_hearing_price"`
	ContingencyPrice *string        `json:"contingency_price"`
	HybridPrice      *string        `json:"hybrid_price"`
}

type Review struct {
	ReviewID   int64     `json:"review_id"`
	UserID     string    `json:"user_id"`
	ReviewerID string    `json:"reviewer_id"`
	Review     string    `json:"review"`
	Rating     int32     `json:"rating"`
	Timestamp  time.Time `json:"timestamp"`
}

type Social struct {
	SocialID   int64  `json:"social_id"`
	EntityID   string `json:"entity_id"`
	EntityType string `json:"entity_type"`
	Platform   string `json:"platform"`
	Link       string `json:"link"`
}

type User struct {
	UserID                  string    `json:"user_id"`
	Email                   string    `json:"email"`
	FirstName               string    `json:"first_name"`
	LastName                string    `json:"last_name"`
	About                   *string   `json:"about"`
	Mobile                  *string   `json:"mobile"`
	Address                 *string   `json:"address"`
	AvatarUrl               *string   `json:"avatar_url"`
	BannerUrl               *string   `json:"banner_url"`
	EmailVerified           bool      `json:"email_verified"`
	MobileVerified          bool      `json:"mobile_verified"`
	WizardStep              int32     `json:"wizard_step"`
	WizardCompleted         bool      `json:"wizard_completed"`
	SignupMethod            int32     `json:"signup_method"`
	PracticeArea            *string   `json:"practice_area"`
	PracticeLocation        *string   `json:"practice_location"`
	Experience              *string   `json:"experience"`
	AverageBillingPerClient *int32    `json:"average_billing_per_client"`
	CaseResolutionRate      *int32    `json:"case_resolution_rate"`
	OpenToReferral          bool      `json:"open_to_referral"`
	JoinDate                time.Time `json:"join_date"`
}
