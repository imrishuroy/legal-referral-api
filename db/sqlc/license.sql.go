// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: license.sql

package db

import (
	"context"
)

const saveLicense = `-- name: SaveLicense :one
INSERT INTO license (
    user_id,
    name,
    license_number,
    issue_date,
    issue_state
) VALUES (
    $1, $2, $3, $4, $5
) RETURNING id, user_id, name, license_number, issue_date, issue_state
`

type SaveLicenseParams struct {
	UserID        string `json:"user_id"`
	Name          string `json:"name"`
	LicenseNumber string `json:"license_number"`
	IssueDate     string `json:"issue_date"`
	IssueState    string `json:"issue_state"`
}

func (q *Queries) SaveLicense(ctx context.Context, arg SaveLicenseParams) (License, error) {
	row := q.db.QueryRow(ctx, saveLicense,
		arg.UserID,
		arg.Name,
		arg.LicenseNumber,
		arg.IssueDate,
		arg.IssueState,
	)
	var i License
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Name,
		&i.LicenseNumber,
		&i.IssueDate,
		&i.IssueState,
	)
	return i, err
}
